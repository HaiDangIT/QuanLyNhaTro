// <auto-generated />
using System;
using DACS2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DACS2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250607001402_Extend")]
    partial class Extend
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DACS2.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DsHinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminId");

                    b.ToTable("Admin");
                });

            modelBuilder.Entity("DACS2.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateOnly?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tuoi")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("DACS2.Models.BaiHoc", b =>
                {
                    b.Property<int>("BaiHocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BaiHocId"));

                    b.Property<string>("DsHinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KhoaHocId")
                        .HasColumnType("int");

                    b.Property<bool>("LoaiBaiHoc")
                        .HasColumnType("bit");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenBaiHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThuTu")
                        .HasColumnType("int");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BaiHocId");

                    b.HasIndex("KhoaHocId");

                    b.ToTable("BaiHoc");
                });

            modelBuilder.Entity("DACS2.Models.BaiHocHoanThanh", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaiHocId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayHoanThanh")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BaiHocId");

                    b.HasIndex("UserId");

                    b.ToTable("BaiHocHoanThanh");
                });

            modelBuilder.Entity("DACS2.Models.BinhLuan", b =>
                {
                    b.Property<int>("BinhLuanId")
                        .HasColumnType("int");

                    b.Property<int>("BaiHocId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("NgayBinhLuan")
                        .HasColumnType("date");

                    b.Property<int>("NguoidungId")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BinhLuanId");

                    b.HasIndex("BaiHocId");

                    b.ToTable("BinhLuan");
                });

            modelBuilder.Entity("DACS2.Models.CT_Admin_BaiHoc", b =>
                {
                    b.Property<int>("CT_Admin_BaiHoc_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CT_Admin_BaiHoc_Id"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<int>("BaiHocId")
                        .HasColumnType("int");

                    b.HasKey("CT_Admin_BaiHoc_Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("BaiHocId");

                    b.ToTable("CT_Admin_BaiHoc");
                });

            modelBuilder.Entity("DACS2.Models.CT_Admin_ChuDe", b =>
                {
                    b.Property<int>("CT_Admin_ChuDe_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CT_Admin_ChuDe_Id"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<int>("ChuDeId")
                        .HasColumnType("int");

                    b.HasKey("CT_Admin_ChuDe_Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("ChuDeId");

                    b.ToTable("CT_Admin_ChuDe");
                });

            modelBuilder.Entity("DACS2.Models.CT_Admin_KhoaHoc", b =>
                {
                    b.Property<int>("CT_Admin_KhoaHoc_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CT_Admin_KhoaHoc_Id"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<int>("KhoaHocId")
                        .HasColumnType("int");

                    b.HasKey("CT_Admin_KhoaHoc_Id");

                    b.HasIndex("AdminId");

                    b.HasIndex("KhoaHocId");

                    b.ToTable("CT_Admin_KhoaHoc");
                });

            modelBuilder.Entity("DACS2.Models.CT_ChuDe_KhoaHoc", b =>
                {
                    b.Property<int>("CT_ChuDe_KhoaHocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CT_ChuDe_KhoaHocId"));

                    b.Property<int>("ChuDeId")
                        .HasColumnType("int");

                    b.Property<int>("KhoaHocId")
                        .HasColumnType("int");

                    b.HasKey("CT_ChuDe_KhoaHocId");

                    b.HasIndex("ChuDeId");

                    b.HasIndex("KhoaHocId");

                    b.ToTable("CT_ChuDe_KhoaHoc");
                });

            modelBuilder.Entity("DACS2.Models.CT_NguoiDung_BaiHoc", b =>
                {
                    b.Property<int>("CT_NguoiDung_BaiHoc_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CT_NguoiDung_BaiHoc_Id"));

                    b.Property<int>("BaiHocId")
                        .HasColumnType("int");

                    b.Property<bool>("DaHoanThanh")
                        .HasColumnType("bit");

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.HasKey("CT_NguoiDung_BaiHoc_Id");

                    b.HasIndex("BaiHocId");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("CT_NguoiDung_BaiHoc");
                });

            modelBuilder.Entity("DACS2.Models.CT_NguoiDung_ChuDe", b =>
                {
                    b.Property<int>("CT_NguoiDung_ChuDe_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CT_NguoiDung_ChuDe_Id"));

                    b.Property<int>("ChuDeId")
                        .HasColumnType("int");

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.HasKey("CT_NguoiDung_ChuDe_Id");

                    b.HasIndex("ChuDeId");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("CT_NguoiDung_ChuDe");
                });

            modelBuilder.Entity("DACS2.Models.CT_NguoiDung_KhoaHoc", b =>
                {
                    b.Property<int>("CT_NguoiDung_KhoaHocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CT_NguoiDung_KhoaHocId"));

                    b.Property<int?>("BaiHocIdCuoiCung")
                        .HasColumnType("int");

                    b.Property<int>("KhoaHocId")
                        .HasColumnType("int");

                    b.Property<int?>("KhoaHocId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDangKy")
                        .HasColumnType("datetime2");

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiDungId1")
                        .HasColumnType("int");

                    b.HasKey("CT_NguoiDung_KhoaHocId");

                    b.HasIndex("BaiHocIdCuoiCung");

                    b.HasIndex("KhoaHocId");

                    b.HasIndex("KhoaHocId1");

                    b.HasIndex("NguoiDungId");

                    b.HasIndex("NguoiDungId1");

                    b.ToTable("CT_NguoiDung_KhoaHoc");
                });

            modelBuilder.Entity("DACS2.Models.ChuDe", b =>
                {
                    b.Property<int>("ChuDeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChuDeId"));

                    b.Property<string>("DsHinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChuDeId");

                    b.ToTable("ChuDe");
                });

            modelBuilder.Entity("DACS2.Models.ChungChi", b =>
                {
                    b.Property<int>("ChungChiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChungChiId"));

                    b.Property<string>("DsHinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KhoaHocId")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("NgayNhan")
                        .HasColumnType("date");

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.Property<string>("TenChungChi")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChungChiId");

                    b.HasIndex("KhoaHocId");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("ChungChi");
                });

            modelBuilder.Entity("DACS2.Models.DanhGia", b =>
                {
                    b.Property<int>("DanhGiaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DanhGiaId"));

                    b.Property<string>("BinhLuan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KhoaHocId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("NgayDanhGia")
                        .HasColumnType("date");

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.Property<int?>("SoSao")
                        .HasColumnType("int");

                    b.HasKey("DanhGiaId");

                    b.HasIndex("KhoaHocId");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("DanhGia");
                });

            modelBuilder.Entity("DACS2.Models.GiaoDich", b =>
                {
                    b.Property<int>("GiaoDichId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GiaoDichId"));

                    b.Property<int?>("KhoaHocId")
                        .HasColumnType("int");

                    b.Property<string>("MaGiaoDich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSauGiaoDich")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayGiaoDich")
                        .HasColumnType("datetime2");

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.Property<string>("PhuongThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SoTien")
                        .HasColumnType("float");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GiaoDichId");

                    b.HasIndex("KhoaHocId");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("GiaoDich");
                });

            modelBuilder.Entity("DACS2.Models.KhoaHoc", b =>
                {
                    b.Property<int>("KhoaHocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KhoaHocId"));

                    b.Property<bool?>("CoCss")
                        .HasColumnType("bit");

                    b.Property<string>("DsHinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Gia")
                        .HasColumnType("real");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiKhoaHoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgonNgu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhoaHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TheLoai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KhoaHocId");

                    b.ToTable("KhoaHoc");
                });

            modelBuilder.Entity("DACS2.Models.LichSuHocTap", b =>
                {
                    b.Property<int>("LichSuHocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LichSuHocId"));

                    b.Property<int>("BaiHocId")
                        .HasColumnType("int");

                    b.Property<int?>("BaiHocId1")
                        .HasColumnType("int");

                    b.Property<bool>("HoanThanh")
                        .HasColumnType("bit");

                    b.Property<int>("KhoaHocId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("NgayXem")
                        .HasColumnType("datetime2");

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.Property<int?>("NguoiDungId1")
                        .HasColumnType("int");

                    b.HasKey("LichSuHocId");

                    b.HasIndex("BaiHocId");

                    b.HasIndex("BaiHocId1");

                    b.HasIndex("KhoaHocId");

                    b.HasIndex("NguoiDungId");

                    b.HasIndex("NguoiDungId1");

                    b.ToTable("LichSuHocTap");
                });

            modelBuilder.Entity("DACS2.Models.NguoiDung", b =>
                {
                    b.Property<int>("NguoiDungId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NguoiDungId"));

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DsHinh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("NguoiDungId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("DACS2.Models.TestCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaiHocId")
                        .HasColumnType("int");

                    b.Property<string>("CssSelector")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpectedValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Property")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("UseJudge0")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BaiHocId");

                    b.ToTable("TestCase");
                });

            modelBuilder.Entity("DACS2.Models.ThongBao", b =>
                {
                    b.Property<int>("TinNhanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TinNhanId"));

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianGui")
                        .HasColumnType("datetime2");

                    b.HasKey("TinNhanId");

                    b.HasIndex("AdminId");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("ThongBao");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DACS2.Models.BaiHoc", b =>
                {
                    b.HasOne("DACS2.Models.KhoaHoc", "KhoaHoc")
                        .WithMany("BaiHoc")
                        .HasForeignKey("KhoaHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoaHoc");
                });

            modelBuilder.Entity("DACS2.Models.BaiHocHoanThanh", b =>
                {
                    b.HasOne("DACS2.Models.BaiHoc", "BaiHoc")
                        .WithMany()
                        .HasForeignKey("BaiHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS2.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaiHoc");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DACS2.Models.BinhLuan", b =>
                {
                    b.HasOne("DACS2.Models.BaiHoc", "BaiHoc")
                        .WithMany("BinhLuan")
                        .HasForeignKey("BaiHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS2.Models.NguoiDung", "NguoiDung")
                        .WithMany("BinhLuan")
                        .HasForeignKey("BinhLuanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaiHoc");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("DACS2.Models.CT_Admin_BaiHoc", b =>
                {
                    b.HasOne("DACS2.Models.Admin", "Admin")
                        .WithMany("CT_Admin_BaiHoc")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS2.Models.BaiHoc", "BaiHoc")
                        .WithMany("CT_Admin_BaiHoc")
                        .HasForeignKey("BaiHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("BaiHoc");
                });

            modelBuilder.Entity("DACS2.Models.CT_Admin_ChuDe", b =>
                {
                    b.HasOne("DACS2.Models.Admin", "Admin")
                        .WithMany("CT_Admin_ChuDe")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS2.Models.ChuDe", "ChuDe")
                        .WithMany("CT_Admin_ChuDe")
                        .HasForeignKey("ChuDeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("ChuDe");
                });

            modelBuilder.Entity("DACS2.Models.CT_Admin_KhoaHoc", b =>
                {
                    b.HasOne("DACS2.Models.Admin", "Admin")
                        .WithMany("CT_Admin_KhoaHoc")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS2.Models.KhoaHoc", "KhoaHoc")
                        .WithMany("CT_Admin_KhoaHoc")
                        .HasForeignKey("KhoaHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("KhoaHoc");
                });

            modelBuilder.Entity("DACS2.Models.CT_ChuDe_KhoaHoc", b =>
                {
                    b.HasOne("DACS2.Models.ChuDe", "ChuDe")
                        .WithMany("CT_ChuDe_KhoaHoc")
                        .HasForeignKey("ChuDeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS2.Models.KhoaHoc", "KhoaHoc")
                        .WithMany("CT_ChuDe_KhoaHoc")
                        .HasForeignKey("KhoaHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChuDe");

                    b.Navigation("KhoaHoc");
                });

            modelBuilder.Entity("DACS2.Models.CT_NguoiDung_BaiHoc", b =>
                {
                    b.HasOne("DACS2.Models.BaiHoc", "BaiHoc")
                        .WithMany("CT_NguoiDung_BaiHoc")
                        .HasForeignKey("BaiHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS2.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaiHoc");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("DACS2.Models.CT_NguoiDung_ChuDe", b =>
                {
                    b.HasOne("DACS2.Models.ChuDe", "ChuDe")
                        .WithMany("CT_NguoiDung_ChuDe")
                        .HasForeignKey("ChuDeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS2.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChuDe");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("DACS2.Models.CT_NguoiDung_KhoaHoc", b =>
                {
                    b.HasOne("DACS2.Models.BaiHoc", "BaiHocCuoiCung")
                        .WithMany()
                        .HasForeignKey("BaiHocIdCuoiCung")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DACS2.Models.KhoaHoc", "KhoaHoc")
                        .WithMany()
                        .HasForeignKey("KhoaHocId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DACS2.Models.KhoaHoc", null)
                        .WithMany("CT_NguoiDung_KhoaHoc")
                        .HasForeignKey("KhoaHocId1");

                    b.HasOne("DACS2.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DACS2.Models.NguoiDung", null)
                        .WithMany("CT_NguoiDung_KhoaHoc")
                        .HasForeignKey("NguoiDungId1");

                    b.Navigation("BaiHocCuoiCung");

                    b.Navigation("KhoaHoc");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("DACS2.Models.ChungChi", b =>
                {
                    b.HasOne("DACS2.Models.KhoaHoc", "KhoaHoc")
                        .WithMany()
                        .HasForeignKey("KhoaHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS2.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoaHoc");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("DACS2.Models.DanhGia", b =>
                {
                    b.HasOne("DACS2.Models.KhoaHoc", "KhoaHoc")
                        .WithMany("DanhGia")
                        .HasForeignKey("KhoaHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS2.Models.NguoiDung", "NguoiDung")
                        .WithMany("DanhGia")
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoaHoc");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("DACS2.Models.GiaoDich", b =>
                {
                    b.HasOne("DACS2.Models.KhoaHoc", "KhoaHoc")
                        .WithMany()
                        .HasForeignKey("KhoaHocId");

                    b.HasOne("DACS2.Models.NguoiDung", "NguoiDung")
                        .WithMany("GiaoDich")
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoaHoc");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("DACS2.Models.LichSuHocTap", b =>
                {
                    b.HasOne("DACS2.Models.BaiHoc", "BaiHoc")
                        .WithMany()
                        .HasForeignKey("BaiHocId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DACS2.Models.BaiHoc", null)
                        .WithMany("LichSuHocTap")
                        .HasForeignKey("BaiHocId1");

                    b.HasOne("DACS2.Models.KhoaHoc", "KhoaHoc")
                        .WithMany()
                        .HasForeignKey("KhoaHocId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DACS2.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DACS2.Models.NguoiDung", null)
                        .WithMany("LichSuHocTap")
                        .HasForeignKey("NguoiDungId1");

                    b.Navigation("BaiHoc");

                    b.Navigation("KhoaHoc");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("DACS2.Models.NguoiDung", b =>
                {
                    b.HasOne("DACS2.Models.ApplicationUser", "User")
                        .WithOne("NguoiDung")
                        .HasForeignKey("DACS2.Models.NguoiDung", "UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DACS2.Models.TestCase", b =>
                {
                    b.HasOne("DACS2.Models.BaiHoc", "BaiHoc")
                        .WithMany("TestCases")
                        .HasForeignKey("BaiHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaiHoc");
                });

            modelBuilder.Entity("DACS2.Models.ThongBao", b =>
                {
                    b.HasOne("DACS2.Models.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS2.Models.NguoiDung", "NguoiDung")
                        .WithMany()
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DACS2.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("DACS2.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DACS2.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DACS2.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DACS2.Models.Admin", b =>
                {
                    b.Navigation("CT_Admin_BaiHoc");

                    b.Navigation("CT_Admin_ChuDe");

                    b.Navigation("CT_Admin_KhoaHoc");
                });

            modelBuilder.Entity("DACS2.Models.ApplicationUser", b =>
                {
                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("DACS2.Models.BaiHoc", b =>
                {
                    b.Navigation("BinhLuan");

                    b.Navigation("CT_Admin_BaiHoc");

                    b.Navigation("CT_NguoiDung_BaiHoc");

                    b.Navigation("LichSuHocTap");

                    b.Navigation("TestCases");
                });

            modelBuilder.Entity("DACS2.Models.ChuDe", b =>
                {
                    b.Navigation("CT_Admin_ChuDe");

                    b.Navigation("CT_ChuDe_KhoaHoc");

                    b.Navigation("CT_NguoiDung_ChuDe");
                });

            modelBuilder.Entity("DACS2.Models.KhoaHoc", b =>
                {
                    b.Navigation("BaiHoc");

                    b.Navigation("CT_Admin_KhoaHoc");

                    b.Navigation("CT_ChuDe_KhoaHoc");

                    b.Navigation("CT_NguoiDung_KhoaHoc");

                    b.Navigation("DanhGia");
                });

            modelBuilder.Entity("DACS2.Models.NguoiDung", b =>
                {
                    b.Navigation("BinhLuan");

                    b.Navigation("CT_NguoiDung_KhoaHoc");

                    b.Navigation("DanhGia");

                    b.Navigation("GiaoDich");

                    b.Navigation("LichSuHocTap");
                });
#pragma warning restore 612, 618
        }
    }
}
